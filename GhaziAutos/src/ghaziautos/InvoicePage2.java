/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ghaziautos;

import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abdul Samad
 */
public class InvoicePage2 extends javax.swing.JFrame {

    /**
     * Creates new form Inventory
     */
    
    String date;
    String innum;
    String cname;
    public InvoicePage2(String date,String innum,String cname) {
        initComponents();
        // Set application icon
        try {
            setIconImage(new javax.swing.ImageIcon(getClass().getResource("/ghaziautos/ghazi_autos_logo.png")).getImage());
        } catch (Exception e) {
            System.out.println("Error loading application icon: " + e);
        }
        this.date=date;
        this.innum=innum;
        this.cname=cname;
        d.setText(date);
        i.setText(innum);
        c.setText(cname);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pname = new javax.swing.JTextField();
        compname = new javax.swing.JTextField();
        price = new javax.swing.JTextField();
        pno = new javax.swing.JTextField();
        quant = new javax.swing.JTextField();
        d = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        i = new javax.swing.JLabel();
        c = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        nlable = new javax.swing.JLabel();
        qlable = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        itable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(pname, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 410, 230, 30));
        getContentPane().add(compname, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 450, 230, 30));
        getContentPane().add(price, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 500, 120, 30));

        pno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pnoKeyReleased(evt);
            }
        });
        getContentPane().add(pno, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 370, 230, 30));

        quant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantKeyReleased(evt);
            }
        });
        getContentPane().add(quant, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 500, 70, 30));

        d.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        d.setForeground(new java.awt.Color(51, 153, 255));
        d.setText(".");
        getContentPane().add(d, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, 120, -1));

        jLabel13.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        jLabel13.setText("Invoice No.");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, -1, -1));

        jLabel14.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        jLabel14.setText("Customer Name");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, -1, -1));

        i.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        i.setForeground(new java.awt.Color(51, 153, 255));
        i.setText(".");
        getContentPane().add(i, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, 160, -1));

        c.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        c.setForeground(new java.awt.Color(0, 153, 255));
        c.setText(".");
        getContentPane().add(c, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, 150, -1));

        jLabel17.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        jLabel17.setText("Date");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, -1, -1));

        jLabel9.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        jLabel9.setText("Qunatity");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 500, -1, -1));

        jButton1.setBackground(new java.awt.Color(51, 153, 255));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 460, 90, 30));

        jButton2.setBackground(new java.awt.Color(51, 153, 255));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("OK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 380, 90, 30));

        jButton3.setBackground(new java.awt.Color(51, 153, 255));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 420, 90, 30));

        nlable.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        nlable.setForeground(new java.awt.Color(255, 51, 51));
        getContentPane().add(nlable, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 370, 130, 30));

        qlable.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        qlable.setForeground(new java.awt.Color(255, 51, 51));
        getContentPane().add(qlable, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 500, 100, 30));

        jLabel18.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel18.setToolTipText("Go to Sales");
        jLabel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel18MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 170, 40));

        jLabel11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel11.setToolTipText("Go to Main Page");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 114, 170, 40));

        jLabel19.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel19.setToolTipText("Go to Inventory");
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel19MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 170, 40));

        itable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product No.", "Name", "Company", "Quantity"
            }
        ));
        jScrollPane1.setViewportView(itable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 50, 470, 310));

        jLabel8.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        jLabel8.setText("Price");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 500, -1, -1));

        jLabel6.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        jLabel6.setText("Company Name");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 450, -1, -1));

        jLabel5.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        jLabel5.setText("Product Name");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 410, -1, -1));

        jLabel3.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        jLabel3.setText("Product No.");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 370, -1, -1));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(714, 444, 150, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ghaziautos/Add Invoice.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        // TODO add your handling code here:
        new MainPage().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel11MouseClicked

    private void jLabel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseClicked
        // TODO add your handling code here:
        new Inventory().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel19MouseClicked

    private void jLabel18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MouseClicked
        // TODO add your handling code here:
        new  Sales().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel18MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        // OK button handler - first search for product
        DB_Model_GA db = new DB_Model_GA();
        ResultSet rs;
        
        // Check if product number is empty
        if(pno.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Product Number", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // If quantity is filled, we're adding to table. Otherwise, we're searching.
        if(!quant.getText().trim().isEmpty()) {
            addProductToTable();
            return;
        }

        try {
            // First check if product exists and get distinct product names
            rs = db.getProductNames(pno.getText());
            if (!rs.isBeforeFirst()) { // If ResultSet is empty
                nlable.setText("Product Not Found");
                pname.setText("");
                compname.setText("");
                price.setText("");
                return;
            }
            
            nlable.setText("");
            
            // Create array of product names
            java.util.ArrayList<String> productNames = new java.util.ArrayList<>();
            while(rs.next()) {
                productNames.add(rs.getString("Name"));
            }
            
            // If only one product name exists
            if(productNames.size() == 1) {
                handleProductNameSelection(productNames.get(0));
            } else {
                // If multiple product names exist, show selection dialog
                String[] options = productNames.toArray(new String[0]);
                int choice = JOptionPane.showOptionDialog(this,
                    "Select Product Name for " + pno.getText(),
                    "Select Product Name",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    options,
                    options[0]);
                
                if(choice >= 0) {
                    handleProductNameSelection(options[choice]);
                }
            }
        } catch(Exception e) {
            System.out.println(e);
            nlable.setText("Error occurred");
        }
    }

    private void handleProductNameSelection(String selectedName) {
        try {
            DB_Model_GA db = new DB_Model_GA();
            // Get companies for the selected product number and name
            ResultSet rs = db.getProductCompanies(pno.getText(), selectedName);
            
            // Create array of companies
            java.util.ArrayList<String> companies = new java.util.ArrayList<>();
            while(rs.next()) {
                companies.add(rs.getString("Company"));
            }
            
            // Set the product name
            pname.setText(selectedName);
            
            // If only one company exists
            if(companies.size() == 1) {
                rs = db.getProductByNumberAndCompany(pno.getText(), companies.get(0));
                if(rs.next()) {
                    fillProductDetails(rs);
                }
            } else {
                // If multiple companies exist, show selection dialog
                String[] options = companies.toArray(new String[0]);
                int choice = JOptionPane.showOptionDialog(this,
                    "Select Company for " + selectedName,
                    "Select Company",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    options,
                    options[0]);
                
                if(choice >= 0) {
                    rs = db.getProductByNumberAndCompany(pno.getText(), options[choice]);
                    if(rs.next()) {
                        fillProductDetails(rs);
                    }
                }
            }
        } catch(Exception e) {
            System.out.println(e);
            nlable.setText("Error occurred");
        }
    }

    private void fillProductDetails(ResultSet rs) {
        try {
            pname.setText(rs.getString("Name"));
            compname.setText(rs.getString("Company"));
            price.setText(rs.getString("Price"));
        } catch(Exception e) {
            System.out.println(e);
        }
    }

    private void addProductToTable() {
        // Validate all required fields are filled
        if(pno.getText().trim().isEmpty() || pname.getText().trim().isEmpty() || 
           compname.getText().trim().isEmpty() || price.getText().trim().isEmpty() || 
           quant.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill all fields", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        DB_Model_GA db = new DB_Model_GA();
        DefaultTableModel tb = (DefaultTableModel)itable.getModel();
        
        // Check for duplicate entries
        for(int i = 0; i < tb.getRowCount(); i++) {
            if(tb.getValueAt(i, 0).toString().equals(pno.getText()) && 
               tb.getValueAt(i, 2).toString().equals(compname.getText())) {
                JOptionPane.showMessageDialog(this, "This product is already added to the invoice", "Warning", JOptionPane.WARNING_MESSAGE);
                clearFields();
                return;
            }
        }
        
        try {
            // First check if quantity is available
            ResultSet rs = db.checkQuantity(pno.getText(), Integer.parseInt(quant.getText()));
            if(!rs.next()) {
                JOptionPane.showMessageDialog(this, "Requested quantity not available in stock", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }

            int st = db.sellProduct(d.getText(), i.getText(), c.getText(), 
                                  pno.getText(), pname.getText(), compname.getText(),
                                  Integer.parseInt(price.getText()), 
                                  Integer.parseInt(quant.getText()));
            if(st != 0) {
                String data[] = {pno.getText(), pname.getText(), compname.getText(), quant.getText()};
                tb.addRow(data);
                st = db.sellupdate(pno.getText(), Integer.parseInt(quant.getText()));
                JOptionPane.showMessageDialog(this, "Product Added", "Invoice Alert", 1);
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Error", "Invoice Alert", 2);
            }
        } catch(Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "Error adding product", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void clearFields() {
        pno.setText("");
        pname.setText("");
        compname.setText("");
        price.setText("");
        quant.setText("");
        nlable.setText("");
        qlable.setText("");
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Delete products from the table
        DB_Model_GA db = new DB_Model_GA();
        DefaultTableModel tb = (DefaultTableModel)itable.getModel();
        
        if(itable.getSelectionModel().isSelectionEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select a product to delete", "Alert", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(itable.getSelectedRowCount() == 1) {
            String no = tb.getValueAt(itable.getSelectedRow(), 0).toString();
            String name = tb.getValueAt(itable.getSelectedRow(), 1).toString();
            String company = tb.getValueAt(itable.getSelectedRow(), 2).toString();
            String quantity = tb.getValueAt(itable.getSelectedRow(), 3).toString();
            
            try {
                // Delete from sales table
                int st = db.delProduct(d.getText(), i.getText(), c.getText(), no, name, company, Integer.parseInt(quantity));
                
                if(st != 0) {
                    // Add the quantity back to inventory
                    db.sellupdate(no, -Integer.parseInt(quantity)); // Negative quantity to add back
                    // Remove from table
                    tb.removeRow(itable.getSelectedRow());
                    JOptionPane.showMessageDialog(this, "Product Deleted", "Invoice Alert", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Error deleting product", "Invoice Alert", JOptionPane.ERROR_MESSAGE);
                }
            } catch(Exception e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(this, "Error occurred while deleting product", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //to put all the products in database
        JOptionPane.showMessageDialog(this,"Invoice Added","Invoice Alert", 1);
        new MainPage().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void pnoKeyReleased(java.awt.event.KeyEvent evt) {
        // Remove the search functionality from key release
        // Now it will only work when OK button is clicked
    }

    private void quantKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantKeyReleased
        // TODO add your handling code here:
        DB_Model_GA db=new DB_Model_GA();
        ResultSet rs;
        try{
        rs=db.checkQuantity(pno.getText(), Integer.parseInt(quant.getText()));
        if(rs.next()){
        qlable.setText("");
            System.out.println(rs.getString("Name"));
        }else{
        qlable.setText("Not in Stock");
        }
        }catch(Exception e){
            System.out.println(e);
        }
        
    }//GEN-LAST:event_quantKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InvoicePage2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InvoicePage2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InvoicePage2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InvoicePage2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InvoicePage2("","","").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel c;
    private javax.swing.JTextField compname;
    private javax.swing.JLabel d;
    private javax.swing.JLabel i;
    private javax.swing.JTable itable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nlable;
    private javax.swing.JTextField pname;
    private javax.swing.JTextField pno;
    private javax.swing.JTextField price;
    private javax.swing.JLabel qlable;
    private javax.swing.JTextField quant;
    // End of variables declaration//GEN-END:variables
}
